package com.habitTracker.backend;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@CrossOrigin(origins = "http://localhost:5173")
@Controller // This means that this class is a Controller
@RequestMapping(path="/froget") // This means URL's start with /demo (after Application path)
public class MainController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private UserRepository userRepository;

  @Autowired
  private HabitRepository habitRepository;

  @Autowired
  private UserHabitRepository userHabitRepository;

  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewUser (@RequestParam String username
      , @RequestParam String email, @RequestParam String password) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    User n = new User();
    n.setName(username);
    n.setEmail(email);
    n.setPassword(password);
    userRepository.save(n);
    return "New user added";
  }

  @PostMapping(path="/addHabit")
  public @ResponseBody String addNewHabit (@RequestParam String habit_name,
                                           @RequestParam String habit_desc,
                                           @RequestParam String icon,
                                           @RequestParam String color,
                                           @RequestParam String habit_type,
                                           @RequestParam String goal,
                                           @RequestParam String start_date,
                                           @RequestParam String end_date) {
    Habit h = new Habit();
    h.setHabit_name(habit_name);
    h.setHabit_desc(habit_desc);
    h.setIcon(icon);
    h.setColor(color);
    h.setHabit_type(habit_type);
    h.setGoal(goal);
    h.setStartDate(start_date);
    h.setEndDate(end_date);
    habitRepository.save(h);
    return "Habit saved";
  }


  @PostMapping(path="/assignHabitToUser")
  public @ResponseBody String assignHabitToUser(@RequestParam Integer userId, @RequestParam Integer habitId) {
    User user = userRepository.findById(userId).orElseThrow();
    Habit habit = habitRepository.findById(habitId).orElseThrow();

    UserHabit userHabit = new UserHabit();
    userHabit.setUser(user);
    userHabit.setHabit(habit);
    userHabitRepository.save(userHabit);

    return "Habit assigned to user";
  }

  @GetMapping(path="/all", produces = MediaType.APPLICATION_JSON_VALUE)
  public @ResponseBody Iterable<User> getAllUsers() {
    // This returns a JSON or XML with the users
    System.out.println(userRepository);
    return userRepository.findAll();
  }

  @GetMapping(path="/allHabits")
  public @ResponseBody Iterable<Habit> getAllHabits() {
    return habitRepository.findAll();
  }

  @GetMapping(path="/allUserHabits")
  public @ResponseBody Iterable<UserHabit> getAllUserHabits() {
    return userHabitRepository.findAll();
  }
}
